#!/bin/bash

set -e
set -u
set -o pipefail

# shellcheck disable=SC1090
. "${XDG_DATA_HOME:-${HOME}/.local/share}/dotfiles/libdotfiles.sh"

print_help() {
    local cmd
    cmd=$(basename "${0}")
    echo "${cmd} [--help]"
    echo "${cmd} sync"
    echo "${cmd} enable [<bundle>...]"
    echo "${cmd} disable [<bundle>...]"
    echo "${cmd} test [--sandbox] [<bundle>...]"
}

map_over_bundles() {
    local bundles count func log_message log_prefix total
    func="${1}"
    log_prefix="${2}"
    shift
    shift
    bundles=( "${@}" )
    if [[ ${#} -eq 0 ]]; then
        mapfile -t bundles < <(dotfiles::get_bundles)
    fi

    count=0
    total=${#bundles[@]}
    for bundle in "${bundles[@]}"; do
        set +e
        (cd "$(dotfiles::get_bundle_dir "${bundle}")" && "${func}" "${bundle}")
        # shellcheck disable=SC2181
        [[ ${?} -eq 0 ]] && ((count+=1))
        set -e
    done

    log_message="${log_prefix} ${count}/${total} bundles"
    if [[ ${count} -ne ${total} ]]; then
        dotfiles::log error "${log_message}"
        return 1
    fi
    dotfiles::log ok "${log_message}"
}

cmd_sync() {
    dotfiles::sync
}

cmd_enable() {
    map_over_bundles dotfiles::enable_bundle "Enabled" "${@}"
}

cmd_disable() {
    map_over_bundles dotfiles::disable_bundle "Disabled" "${@}"
}

cmd_test() {
    local cmd error
    if [[ ${#} -gt 0 && "${1}" == "--sandbox" ]]; then
        shift
        cmd=$(basename "${0}")

        set +e
        (set -e
         cd "${DOTFILES_BASE}/"
         cmd_error=0
         vms=$(vagrant status | awk '/^$/ {x=!x; next} x {print $1}')
         for vm in ${vms}; do
             dotfiles::log info "Running sandbox test on '${vm}'"

             vagrant up --provision "${vm}"
             set +e
             vagrant ssh \
                     --command "${cmd} enable ${*} && ${cmd} test ${*}" \
                     "${vm}"
             # shellcheck disable=SC2181
             [[ ${?} -ne 0 ]] && ((cmd_error+=1))
             set -e
             vagrant halt "${vm}"
             true
         done
         [[ ${cmd_error} -eq 0 ]])
        error=${?}
        set -e

        if [[ ${error} -ne 0 ]]; then
            dotfiles::log error "Sandbox test unsuccessful"
            return 1
        fi
        dotfiles::log ok "Sandbox test successful"
    else
        map_over_bundles dotfiles::test_bundle "Tests succeeded on" "${@}"
    fi
}

main() {
    local arg cmd

    if [[ ${#} -eq 0 ]]; then
        print_help
        exit 1
    fi

    arg=${1}
    case ${arg} in
        --help)
            print_help
            exit 0
            ;;
        *)
            cmd=cmd_${arg}
            if [[ $(type -t "${cmd}") != "function" ]]; then
                print_help
                exit 1
            fi

            shift
            ${cmd} "${@}"
            ;;
    esac
}

main "${@}"
