#!/bin/bash

set -euo pipefail

cd "$(dirname "$(realpath "$0")")"

get_distro() {
  (if [[ -f /etc/lsb-release ]]; then
     # shellcheck disable=SC1091
     (. /etc/lsb-release && echo "${DISTRIB_ID}")
   elif [[ -f /etc/os-release ]]; then
     # shellcheck disable=SC1091
     (. /etc/os-release && echo "${ID}")
   else
     uname --kernel-name
   fi) | tr '[:upper:]' '[:lower:]'
}

for file in "setup-$(get_distro).sh" "local/setup-local.sh"; do
  if [[ -f "${file}" ]]; then
    # shellcheck source=/dev/null
    . "${file}"
  fi
done

# Stow
cat <<EOF > ~/.stowrc
--no-folding
--target=${HOME}
EOF

# Remove skeleton dotfiles
for file in ~/.bash{_logout,_profile,rc} ~/.profile; do
  if [[ -f "${file}" && ! -L "${file}" ]]; then
    mv "${file}" "${file}".bak
  fi
done

# XDG
if [[ ! -f ~/.config/user-dirs.dirs ]]; then
  xdg-user-dirs-update --force
fi
for dir in TEMPLATES PUBLICSHARE; do
  old_dir=$(xdg-user-dir "${dir}")
  target_dir="${HOME}/.${dir,,}"
  xdg-user-dirs-update --set "${dir}" "${target_dir}"
  new_dir=$(xdg-user-dir "${dir}")
  if [[ "${old_dir}" != "${new_dir}" ]]; then
    mv "${old_dir}" "${new_dir}"
  fi
done

echo -e "\e[1m\e[32mSetup completed successfully\e[39m\e[0m"
