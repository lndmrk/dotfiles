#!/usr/bin/env bash
#
# SPDX-FileCopyrightText: 2019 Emil Lundmark <emil@lndmrk.se>
# SPDX-License-Identifier: GPL-3.0-or-later

set -e
set -u
set -o pipefail

: "${DOTFILES_PROJECT_ROOT:=$(realpath "$(dirname "$(realpath "${BASH_SOURCE[0]}")")"/../../../)}"

log() {
  local level="${1}"
  local message="${2}"
  local esc_start=""
  local esc_end=""
  local fd=2

  if [[ -t ${fd} ]]; then
    case ${level} in
      info) : '\e[34m' ;;
      warning) : '\e[33m' ;;
      error) : '\e[31m' ;;
      *) : '' ;;
    esac
    esc_start="\e[1m${_}"
    esc_end='\e[0m'
  fi
  printf '%b\n' "${esc_start}${level^^}: ${message}${esc_end}" >&${fd}
}

get_playbook() {
  echo "$(hostname --short).yml"
}

cmd_deploy() {
  local extra_args=""
  if [[ ${#} -eq 0 ]]; then
    extra_args=--ask-become-pass
  fi

  ansible-playbook ${extra_args} "${@}" "$(get_playbook)"
}

cmd_sync() {
  ansible-playbook --tags=sync "$(get_playbook)"
}

print_help() {
  local cmd
  cmd=$(basename "${0}")
  cat <<-EOF
	${cmd} [--help]
	${cmd} deploy [...]
	${cmd} sync
	EOF
}

main() {
  if [[ ${#} -eq 0 ]]; then
    print_help
    exit 1
  fi

  local arg=${1}
  case ${arg} in
    --help)
      print_help
      exit 0
      ;;
    *)
      local cmd=cmd_${arg}
      if [[ $(type -t "${cmd}") != "function" ]]; then
        log error "No such command: ${arg}"
        print_help
        exit 1
      fi
      shift
      (
        cd "${DOTFILES_PROJECT_ROOT}"
        ${cmd} "${@}"
      )
      ;;
  esac
}

main "${@}"
